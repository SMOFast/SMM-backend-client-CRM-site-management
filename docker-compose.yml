version: '3.8'
services:
    nginx:
        image: nginx:latest
        container_name: ${DOCKER_PROJECT_NAME}_nginx
        restart: unless-stopped
        environment:
            NGINX_SERVER_NAME: ${APP_DOMAIN:-smo_server.test}
        ports:
            - "${DOCKER_HTTP_PORT:-80}:80"
            - "${DOCKER_HTTPS_PORT:-443}:443"
        volumes:
            - ./docker/nginx/templates:/etc/nginx/templates
            - ./:/var/www/html
        networks:
            - smo-network
        depends_on:
            - mysql
            - php81
    php81:
        build:
            context: ./
            dockerfile: ./docker/php/Dockerfile
        environment:
            XDEBUG_CONFIG: "remote_host=${XDEBUG_REMOTE_HOST:-php} client_host=${XDEBUG_CLIENT_HOST:-host.docker.internal} remote_enable=1"
            PHP_IDE_CONFIG: "serverName=${PHP_IDE_CONFIG_SERVER_NAME}"
        container_name: ${DOCKER_PROJECT_NAME}_php81
        restart: unless-stopped
        volumes:
            - ./docker/php/conf/php.ini:/usr/local/etc/php/conf.d/docker.ini
            - ./:/var/www/html
        networks:
            - smo-network
        depends_on:
            - mysql
            - redis
    mysql:
        image: mysql:latest
        container_name: ${DOCKER_PROJECT_NAME}_db
        ports:
            - "${DOCKER_MYSQL_PORT:-3306}:${DOCKER_MYSQL_PORT:-3306}"
        cap_add:
            - SYS_NICE
        environment:
            MYSQL_HOST: ${DB_HOST}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            MYSQL_TCP_PORT: ${DOCKER_MYSQL_PORT:-3306}
        volumes:
            - mysql:/var/lib/mysql
            - ./storage/app/mysql:/app/mysql
        networks:
            - smo-network
    redis:
        image: redis:alpine
        container_name: ${DOCKER_PROJECT_NAME}_redis
        restart: unless-stopped
        ports:
            - "${DOCKER_REDIS_PORT}:6379"
        volumes:
            - redis:/data
        networks:
            - smo-network
networks:
    smo-network:
        external: true
        driver: bridge

volumes:
    redis:
        driver: local
    mysql:
        driver: local
